{"env_info": "sys.platform: win32\nPython: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 2060\nCUDA_HOME: D:\\Anaconda\\envs\\py39\nNVCC: Cuda compilation tools, release 11.7, V11.7.99\nMSVC: \u7528\u4e8e x64 \u7684 Microsoft (R) C/C++ \u4f18\u5316\u7f16\u8bd1\u5668 19.29.30139 \u7248\nGCC: n/a\nPyTorch: 1.13.1\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192829337\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 2019\n  - LAPACK is enabled (usually provided by MKL)\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.7\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.5\n  - Magma 2.5.4\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.1\nOpenCV: 4.7.0\nMMCV: 1.7.0\nMMCV Compiler: MSVC 192829924\nMMCV CUDA Compiler: 11.7\nMMDetection: 2.28.0+", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=None),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=1,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'CocoDataset'\ndata_root = 'balloon'\nCLASSES = ('balloon', )\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='balloon/train/coco.json',\n        img_prefix='balloon/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='balloon/val/coco.json',\n        img_prefix='balloon/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='balloon/val/coco.json',\n        img_prefix='balloon/val/coco.json',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(metric=['bbox', 'segm'])\noptimizer = dict(type='SGD', lr=0.0008, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=5,\n    warmup_ratio=0.0001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=3)\nlog_config = dict(interval=3, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'mask_rcnn_r50_fpn_1x_coco_20200205-d4b0c5d6.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nwork_dir = './work_dirs\\mask_rcnn_r50_fpn_1x_coco'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 1108740230, "exp_name": "mask_rcnn_r50_fpn_1x_coco.py"}
{"mode": "train", "epoch": 1, "iter": 3, "lr": 0.00032, "memory": 3507, "data_time": 2.96195, "loss_rpn_cls": 0.19865, "loss_rpn_bbox": 0.03206, "loss_cls": 0.57638, "acc": 86.58854, "loss_bbox": 0.20911, "loss_mask": 9.01092, "loss": 10.02711, "time": 4.51467}
{"mode": "train", "epoch": 1, "iter": 6, "lr": 0.0008, "memory": 3507, "data_time": 0.08954, "loss_rpn_cls": 0.02123, "loss_rpn_bbox": 0.00758, "loss_cls": 0.51516, "acc": 88.18359, "loss_bbox": 0.24105, "loss_mask": 3.13334, "loss": 3.91836, "time": 0.61081}
{"mode": "train", "epoch": 1, "iter": 9, "lr": 0.0008, "memory": 3507, "data_time": 0.11436, "loss_rpn_cls": 0.03525, "loss_rpn_bbox": 0.00594, "loss_cls": 0.28384, "acc": 96.90755, "loss_bbox": 0.10838, "loss_mask": 0.75289, "loss": 1.18631, "time": 0.63763}
{"mode": "train", "epoch": 1, "iter": 12, "lr": 0.0008, "memory": 3773, "data_time": 0.11902, "loss_rpn_cls": 0.04329, "loss_rpn_bbox": 0.0255, "loss_cls": 0.37092, "acc": 85.1237, "loss_bbox": 0.53103, "loss_mask": 0.66455, "loss": 1.63529, "time": 0.71708}
{"mode": "train", "epoch": 1, "iter": 15, "lr": 0.0008, "memory": 3773, "data_time": 0.1137, "loss_rpn_cls": 0.02839, "loss_rpn_bbox": 0.0131, "loss_cls": 0.22394, "acc": 92.70833, "loss_bbox": 0.25574, "loss_mask": 0.61859, "loss": 1.13976, "time": 0.64128}
{"mode": "train", "epoch": 1, "iter": 18, "lr": 0.0008, "memory": 3810, "data_time": 0.1137, "loss_rpn_cls": 0.10075, "loss_rpn_bbox": 0.0289, "loss_cls": 0.34787, "acc": 86.49089, "loss_bbox": 0.50866, "loss_mask": 0.45345, "loss": 1.43962, "time": 0.79687}
{"mode": "train", "epoch": 1, "iter": 21, "lr": 0.0008, "memory": 3810, "data_time": 0.12267, "loss_rpn_cls": 0.01997, "loss_rpn_bbox": 0.01391, "loss_cls": 0.25252, "acc": 90.36458, "loss_bbox": 0.39389, "loss_mask": 0.31046, "loss": 0.99076, "time": 0.72174}
{"mode": "train", "epoch": 1, "iter": 24, "lr": 0.0008, "memory": 3810, "data_time": 0.13564, "loss_rpn_cls": 0.06246, "loss_rpn_bbox": 0.02584, "loss_cls": 0.24816, "acc": 90.20182, "loss_bbox": 0.35527, "loss_mask": 0.43416, "loss": 1.12589, "time": 0.78257}
{"mode": "train", "epoch": 1, "iter": 27, "lr": 0.0008, "memory": 3810, "data_time": 0.13298, "loss_rpn_cls": 0.0255, "loss_rpn_bbox": 0.01433, "loss_cls": 0.19832, "acc": 91.82943, "loss_bbox": 0.27894, "loss_mask": 0.23649, "loss": 0.75359, "time": 0.84441}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.0008, "memory": 3810, "data_time": 0.16423, "loss_rpn_cls": 0.02595, "loss_rpn_bbox": 0.02164, "loss_cls": 0.23821, "acc": 89.42057, "loss_bbox": 0.38823, "loss_mask": 0.28115, "loss": 0.95518, "time": 0.72606}
{"mode": "val", "epoch": 1, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.4462, "bbox_mAP_50": 0.6682, "bbox_mAP_75": 0.5204, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.3866, "bbox_mAP_l": 0.5147, "bbox_mAP_copypaste": "0.4462 0.6682 0.5204 0.0000 0.3866 0.5147", "segm_mAP": 0.5669, "segm_mAP_50": 0.6649, "segm_mAP_75": 0.6609, "segm_mAP_s": 0.0, "segm_mAP_m": 0.3682, "segm_mAP_l": 0.6591, "segm_mAP_copypaste": "0.5669 0.6649 0.6609 0.0000 0.3682 0.6591"}
{"mode": "train", "epoch": 2, "iter": 3, "lr": 0.0008, "memory": 3952, "data_time": 2.85256, "loss_rpn_cls": 0.03211, "loss_rpn_bbox": 0.02305, "loss_cls": 0.23738, "acc": 87.36979, "loss_bbox": 0.43506, "loss_mask": 0.25203, "loss": 0.97963, "time": 3.55069}
{"mode": "train", "epoch": 2, "iter": 6, "lr": 0.0008, "memory": 3952, "data_time": 0.12001, "loss_rpn_cls": 0.03044, "loss_rpn_bbox": 0.01065, "loss_cls": 0.13201, "acc": 94.40104, "loss_bbox": 0.17886, "loss_mask": 0.14251, "loss": 0.49447, "time": 0.67586}
{"mode": "train", "epoch": 2, "iter": 9, "lr": 0.0008, "memory": 3952, "data_time": 0.11902, "loss_rpn_cls": 0.03366, "loss_rpn_bbox": 0.02136, "loss_cls": 0.24721, "acc": 85.83984, "loss_bbox": 0.50698, "loss_mask": 0.20872, "loss": 1.01794, "time": 0.69315}
{"mode": "train", "epoch": 2, "iter": 12, "lr": 0.0008, "memory": 3952, "data_time": 0.11569, "loss_rpn_cls": 0.04787, "loss_rpn_bbox": 0.00814, "loss_cls": 0.1571, "acc": 92.38281, "loss_bbox": 0.27008, "loss_mask": 0.15492, "loss": 0.6381, "time": 0.72273}
{"mode": "train", "epoch": 2, "iter": 15, "lr": 0.0008, "memory": 3952, "data_time": 0.13098, "loss_rpn_cls": 0.02754, "loss_rpn_bbox": 0.01752, "loss_cls": 0.13997, "acc": 92.74089, "loss_bbox": 0.25413, "loss_mask": 0.14129, "loss": 0.58044, "time": 0.66655}
{"mode": "train", "epoch": 2, "iter": 18, "lr": 0.0008, "memory": 3952, "data_time": 0.11669, "loss_rpn_cls": 0.01858, "loss_rpn_bbox": 0.01255, "loss_cls": 0.15551, "acc": 92.31771, "loss_bbox": 0.27337, "loss_mask": 0.09686, "loss": 0.55688, "time": 0.65126}
{"mode": "train", "epoch": 2, "iter": 21, "lr": 0.0008, "memory": 3952, "data_time": 0.12898, "loss_rpn_cls": 0.02645, "loss_rpn_bbox": 0.03461, "loss_cls": 0.24515, "acc": 86.71875, "loss_bbox": 0.48518, "loss_mask": 0.15387, "loss": 0.94525, "time": 0.70744}
{"mode": "train", "epoch": 2, "iter": 24, "lr": 0.0008, "memory": 3952, "data_time": 0.11935, "loss_rpn_cls": 0.01853, "loss_rpn_bbox": 0.01297, "loss_cls": 0.17889, "acc": 90.98307, "loss_bbox": 0.35857, "loss_mask": 0.10947, "loss": 0.67843, "time": 0.6855}
{"mode": "train", "epoch": 2, "iter": 27, "lr": 0.0008, "memory": 3952, "data_time": 0.11636, "loss_rpn_cls": 0.01707, "loss_rpn_bbox": 0.00519, "loss_cls": 0.12968, "acc": 94.23828, "loss_bbox": 0.27066, "loss_mask": 0.12356, "loss": 0.54616, "time": 0.67719}
{"mode": "train", "epoch": 2, "iter": 30, "lr": 0.0008, "memory": 3952, "data_time": 0.11835, "loss_rpn_cls": 0.01097, "loss_rpn_bbox": 0.00785, "loss_cls": 0.18393, "acc": 93.19661, "loss_bbox": 0.43019, "loss_mask": 0.16871, "loss": 0.80165, "time": 0.68982}
{"mode": "val", "epoch": 2, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.5854, "bbox_mAP_50": 0.7517, "bbox_mAP_75": 0.7116, "bbox_mAP_s": 0.0035, "bbox_mAP_m": 0.468, "bbox_mAP_l": 0.6559, "bbox_mAP_copypaste": "0.5854 0.7517 0.7116 0.0035 0.4680 0.6559", "segm_mAP": 0.657, "segm_mAP_50": 0.7508, "segm_mAP_75": 0.7295, "segm_mAP_s": 0.0099, "segm_mAP_m": 0.4723, "segm_mAP_l": 0.7485, "segm_mAP_copypaste": "0.6570 0.7508 0.7295 0.0099 0.4723 0.7485"}
{"mode": "train", "epoch": 3, "iter": 3, "lr": 0.0008, "memory": 3952, "data_time": 2.79557, "loss_rpn_cls": 0.00846, "loss_rpn_bbox": 0.00985, "loss_cls": 0.11458, "acc": 94.43359, "loss_bbox": 0.23839, "loss_mask": 0.12311, "loss": 0.4944, "time": 3.47176}
{"mode": "train", "epoch": 3, "iter": 6, "lr": 0.0008, "memory": 3952, "data_time": 0.11868, "loss_rpn_cls": 0.0096, "loss_rpn_bbox": 0.0047, "loss_cls": 0.13819, "acc": 94.46615, "loss_bbox": 0.35283, "loss_mask": 0.222, "loss": 0.72731, "time": 0.69963}
{"mode": "train", "epoch": 3, "iter": 9, "lr": 0.0008, "memory": 3952, "data_time": 0.12351, "loss_rpn_cls": 0.0143, "loss_rpn_bbox": 0.01325, "loss_cls": 0.16714, "acc": 93.65234, "loss_bbox": 0.42544, "loss_mask": 0.14713, "loss": 0.76726, "time": 0.71695}
{"mode": "train", "epoch": 3, "iter": 12, "lr": 0.0008, "memory": 3952, "data_time": 0.13215, "loss_rpn_cls": 0.03135, "loss_rpn_bbox": 0.01967, "loss_cls": 0.12025, "acc": 95.50781, "loss_bbox": 0.27826, "loss_mask": 0.12464, "loss": 0.57417, "time": 0.68618}
{"mode": "train", "epoch": 3, "iter": 15, "lr": 0.0008, "memory": 3952, "data_time": 0.13797, "loss_rpn_cls": 0.01502, "loss_rpn_bbox": 0.00842, "loss_cls": 0.11244, "acc": 95.08464, "loss_bbox": 0.27276, "loss_mask": 0.11717, "loss": 0.5258, "time": 0.85272}
{"mode": "train", "epoch": 3, "iter": 18, "lr": 0.0008, "memory": 3952, "data_time": 0.13564, "loss_rpn_cls": 0.01873, "loss_rpn_bbox": 0.0101, "loss_cls": 0.1017, "acc": 96.1263, "loss_bbox": 0.23214, "loss_mask": 0.10518, "loss": 0.46785, "time": 0.72971}
{"mode": "train", "epoch": 3, "iter": 21, "lr": 0.0008, "memory": 3952, "data_time": 0.1506, "loss_rpn_cls": 0.0184, "loss_rpn_bbox": 0.02141, "loss_cls": 0.13399, "acc": 94.62891, "loss_bbox": 0.31815, "loss_mask": 0.14832, "loss": 0.64026, "time": 0.92619}
{"mode": "train", "epoch": 3, "iter": 24, "lr": 0.0008, "memory": 3952, "data_time": 0.12267, "loss_rpn_cls": 0.01448, "loss_rpn_bbox": 0.01003, "loss_cls": 0.10204, "acc": 96.71224, "loss_bbox": 0.28431, "loss_mask": 0.07739, "loss": 0.48824, "time": 0.74168}
{"mode": "train", "epoch": 3, "iter": 27, "lr": 0.0008, "memory": 3952, "data_time": 0.12035, "loss_rpn_cls": 0.03073, "loss_rpn_bbox": 0.0192, "loss_cls": 0.16486, "acc": 93.8151, "loss_bbox": 0.3935, "loss_mask": 0.17544, "loss": 0.78372, "time": 0.75531}
{"mode": "train", "epoch": 3, "iter": 30, "lr": 0.0008, "memory": 3952, "data_time": 0.11702, "loss_rpn_cls": 0.00774, "loss_rpn_bbox": 0.00662, "loss_cls": 0.09196, "acc": 96.9401, "loss_bbox": 0.27022, "loss_mask": 0.06972, "loss": 0.44626, "time": 0.70378}
{"mode": "val", "epoch": 3, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.625, "bbox_mAP_50": 0.7808, "bbox_mAP_75": 0.7361, "bbox_mAP_s": 0.0036, "bbox_mAP_m": 0.4966, "bbox_mAP_l": 0.6981, "bbox_mAP_copypaste": "0.6250 0.7808 0.7361 0.0036 0.4966 0.6981", "segm_mAP": 0.7057, "segm_mAP_50": 0.7785, "segm_mAP_75": 0.7764, "segm_mAP_s": 0.005, "segm_mAP_m": 0.5111, "segm_mAP_l": 0.7928, "segm_mAP_copypaste": "0.7057 0.7785 0.7764 0.0050 0.5111 0.7928"}
{"mode": "train", "epoch": 4, "iter": 3, "lr": 0.0008, "memory": 3952, "data_time": 2.9371, "loss_rpn_cls": 0.01979, "loss_rpn_bbox": 0.01886, "loss_cls": 0.13339, "acc": 95.47526, "loss_bbox": 0.29691, "loss_mask": 0.17032, "loss": 0.63927, "time": 3.65052}
{"mode": "train", "epoch": 4, "iter": 6, "lr": 0.0008, "memory": 3952, "data_time": 0.1373, "loss_rpn_cls": 0.01777, "loss_rpn_bbox": 0.01748, "loss_cls": 0.10986, "acc": 96.25651, "loss_bbox": 0.22543, "loss_mask": 0.09411, "loss": 0.46465, "time": 0.73769}
{"mode": "train", "epoch": 4, "iter": 9, "lr": 0.0008, "memory": 3952, "data_time": 0.12234, "loss_rpn_cls": 0.02344, "loss_rpn_bbox": 0.01926, "loss_cls": 0.10903, "acc": 96.875, "loss_bbox": 0.25326, "loss_mask": 0.13527, "loss": 0.54027, "time": 0.72007}
{"mode": "train", "epoch": 4, "iter": 12, "lr": 0.0008, "memory": 3952, "data_time": 0.12467, "loss_rpn_cls": 0.00762, "loss_rpn_bbox": 0.0084, "loss_cls": 0.11058, "acc": 96.45182, "loss_bbox": 0.26181, "loss_mask": 0.17537, "loss": 0.56378, "time": 0.74334}
{"mode": "train", "epoch": 4, "iter": 15, "lr": 0.0008, "memory": 3952, "data_time": 0.11735, "loss_rpn_cls": 0.01137, "loss_rpn_bbox": 0.00403, "loss_cls": 0.05272, "acc": 98.24219, "loss_bbox": 0.07658, "loss_mask": 0.07484, "loss": 0.21955, "time": 0.65525}
{"mode": "train", "epoch": 4, "iter": 18, "lr": 0.0008, "memory": 3952, "data_time": 0.12699, "loss_rpn_cls": 0.0173, "loss_rpn_bbox": 0.0234, "loss_cls": 0.1884, "acc": 92.64323, "loss_bbox": 0.27859, "loss_mask": 0.15149, "loss": 0.65918, "time": 0.7347}
{"mode": "train", "epoch": 4, "iter": 21, "lr": 0.0008, "memory": 3952, "data_time": 0.11902, "loss_rpn_cls": 0.01201, "loss_rpn_bbox": 0.00367, "loss_cls": 0.05602, "acc": 97.98177, "loss_bbox": 0.08512, "loss_mask": 0.0775, "loss": 0.23433, "time": 0.69281}
{"mode": "train", "epoch": 4, "iter": 24, "lr": 0.0008, "memory": 3952, "data_time": 0.124, "loss_rpn_cls": 0.00818, "loss_rpn_bbox": 0.00521, "loss_cls": 0.04842, "acc": 98.14453, "loss_bbox": 0.08398, "loss_mask": 0.08121, "loss": 0.22701, "time": 0.66954}
{"mode": "train", "epoch": 4, "iter": 27, "lr": 0.0008, "memory": 3952, "data_time": 0.12301, "loss_rpn_cls": 0.00962, "loss_rpn_bbox": 0.0101, "loss_cls": 0.06565, "acc": 97.98177, "loss_bbox": 0.11186, "loss_mask": 0.11484, "loss": 0.31208, "time": 0.71908}
{"mode": "train", "epoch": 4, "iter": 30, "lr": 0.0008, "memory": 3952, "data_time": 0.12101, "loss_rpn_cls": 0.00384, "loss_rpn_bbox": 0.01121, "loss_cls": 0.07416, "acc": 97.49349, "loss_bbox": 0.10273, "loss_mask": 0.07692, "loss": 0.26885, "time": 0.72672}
{"mode": "val", "epoch": 4, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.6358, "bbox_mAP_50": 0.8001, "bbox_mAP_75": 0.7835, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.5411, "bbox_mAP_l": 0.7031, "bbox_mAP_copypaste": "0.6358 0.8001 0.7835 0.0000 0.5411 0.7031", "segm_mAP": 0.7144, "segm_mAP_50": 0.8001, "segm_mAP_75": 0.8001, "segm_mAP_s": 0.0, "segm_mAP_m": 0.5819, "segm_mAP_l": 0.7923, "segm_mAP_copypaste": "0.7144 0.8001 0.8001 0.0000 0.5819 0.7923"}
{"mode": "train", "epoch": 5, "iter": 3, "lr": 0.0008, "memory": 3952, "data_time": 3.04561, "loss_rpn_cls": 0.01255, "loss_rpn_bbox": 0.01591, "loss_cls": 0.06515, "acc": 98.07943, "loss_bbox": 0.09731, "loss_mask": 0.09608, "loss": 0.28699, "time": 3.69189}
{"mode": "train", "epoch": 5, "iter": 6, "lr": 0.0008, "memory": 3952, "data_time": 0.11669, "loss_rpn_cls": 0.01272, "loss_rpn_bbox": 0.0106, "loss_cls": 0.07222, "acc": 97.26562, "loss_bbox": 0.11648, "loss_mask": 0.14994, "loss": 0.36196, "time": 0.71043}
{"mode": "train", "epoch": 5, "iter": 9, "lr": 0.0008, "memory": 3952, "data_time": 0.12034, "loss_rpn_cls": 0.00308, "loss_rpn_bbox": 0.01354, "loss_cls": 0.05491, "acc": 98.07943, "loss_bbox": 0.09334, "loss_mask": 0.09134, "loss": 0.2562, "time": 0.69248}
{"mode": "train", "epoch": 5, "iter": 12, "lr": 0.0008, "memory": 3952, "data_time": 0.12067, "loss_rpn_cls": 0.01088, "loss_rpn_bbox": 0.01207, "loss_cls": 0.08574, "acc": 96.8099, "loss_bbox": 0.17559, "loss_mask": 0.10431, "loss": 0.38859, "time": 0.7224}
{"mode": "train", "epoch": 5, "iter": 15, "lr": 0.0008, "memory": 3952, "data_time": 0.12467, "loss_rpn_cls": 0.00446, "loss_rpn_bbox": 0.01166, "loss_cls": 0.10843, "acc": 96.0612, "loss_bbox": 0.15834, "loss_mask": 0.13585, "loss": 0.41874, "time": 0.7101}
{"mode": "train", "epoch": 5, "iter": 18, "lr": 0.0008, "memory": 3952, "data_time": 0.12267, "loss_rpn_cls": 0.00751, "loss_rpn_bbox": 0.01068, "loss_cls": 0.0691, "acc": 97.55859, "loss_bbox": 0.09739, "loss_mask": 0.09858, "loss": 0.28328, "time": 0.70578}
{"mode": "train", "epoch": 5, "iter": 21, "lr": 0.0008, "memory": 3952, "data_time": 0.12067, "loss_rpn_cls": 0.02974, "loss_rpn_bbox": 0.00428, "loss_cls": 0.03943, "acc": 98.76302, "loss_bbox": 0.05522, "loss_mask": 0.05975, "loss": 0.18843, "time": 0.68184}
{"mode": "train", "epoch": 5, "iter": 24, "lr": 0.0008, "memory": 3952, "data_time": 0.12167, "loss_rpn_cls": 0.00181, "loss_rpn_bbox": 0.00539, "loss_cls": 0.06323, "acc": 97.49349, "loss_bbox": 0.07041, "loss_mask": 0.07123, "loss": 0.21206, "time": 0.67852}
{"mode": "train", "epoch": 5, "iter": 27, "lr": 0.0008, "memory": 3952, "data_time": 0.12001, "loss_rpn_cls": 0.01265, "loss_rpn_bbox": 0.02509, "loss_cls": 0.15099, "acc": 93.65234, "loss_bbox": 0.25275, "loss_mask": 0.11585, "loss": 0.55733, "time": 0.74866}
{"mode": "train", "epoch": 5, "iter": 30, "lr": 0.0008, "memory": 3952, "data_time": 0.11835, "loss_rpn_cls": 0.01087, "loss_rpn_bbox": 0.01429, "loss_cls": 0.12408, "acc": 95.3776, "loss_bbox": 0.17798, "loss_mask": 0.16604, "loss": 0.49327, "time": 0.75465}
{"mode": "val", "epoch": 5, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.6722, "bbox_mAP_50": 0.8372, "bbox_mAP_75": 0.815, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.582, "bbox_mAP_l": 0.7297, "bbox_mAP_copypaste": "0.6722 0.8372 0.8150 0.0000 0.5820 0.7297", "segm_mAP": 0.7539, "segm_mAP_50": 0.8346, "segm_mAP_75": 0.8346, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6178, "segm_mAP_l": 0.8247, "segm_mAP_copypaste": "0.7539 0.8346 0.8346 0.0000 0.6178 0.8247"}
{"mode": "train", "epoch": 6, "iter": 3, "lr": 0.0008, "memory": 3952, "data_time": 2.90681, "loss_rpn_cls": 0.01201, "loss_rpn_bbox": 0.0137, "loss_cls": 0.07985, "acc": 97.26562, "loss_bbox": 0.12365, "loss_mask": 0.11519, "loss": 0.3444, "time": 3.5461}
{"mode": "train", "epoch": 6, "iter": 6, "lr": 0.0008, "memory": 3952, "data_time": 0.12367, "loss_rpn_cls": 0.01525, "loss_rpn_bbox": 0.02059, "loss_cls": 0.10558, "acc": 95.73568, "loss_bbox": 0.15332, "loss_mask": 0.0975, "loss": 0.39225, "time": 0.72374}
{"mode": "train", "epoch": 6, "iter": 9, "lr": 0.0008, "memory": 3952, "data_time": 0.12699, "loss_rpn_cls": 0.00922, "loss_rpn_bbox": 0.01801, "loss_cls": 0.12717, "acc": 94.40104, "loss_bbox": 0.15174, "loss_mask": 0.09223, "loss": 0.39836, "time": 0.8248}
{"mode": "train", "epoch": 6, "iter": 12, "lr": 0.0008, "memory": 3952, "data_time": 0.10972, "loss_rpn_cls": 0.01025, "loss_rpn_bbox": 0.00587, "loss_cls": 0.04965, "acc": 98.40495, "loss_bbox": 0.07891, "loss_mask": 0.08324, "loss": 0.22791, "time": 0.67918}
{"mode": "train", "epoch": 6, "iter": 15, "lr": 0.0008, "memory": 3952, "data_time": 0.11203, "loss_rpn_cls": 0.0078, "loss_rpn_bbox": 0.01274, "loss_cls": 0.07074, "acc": 97.23307, "loss_bbox": 0.1156, "loss_mask": 0.10269, "loss": 0.30957, "time": 0.67021}
{"mode": "train", "epoch": 6, "iter": 18, "lr": 0.0008, "memory": 3952, "data_time": 0.10073, "loss_rpn_cls": 0.00127, "loss_rpn_bbox": 0.00375, "loss_cls": 0.03489, "acc": 98.95833, "loss_bbox": 0.05584, "loss_mask": 0.07415, "loss": 0.1699, "time": 0.65259}
{"mode": "train", "epoch": 6, "iter": 21, "lr": 0.0008, "memory": 3952, "data_time": 0.10805, "loss_rpn_cls": 0.01077, "loss_rpn_bbox": 0.00311, "loss_cls": 0.05681, "acc": 98.11198, "loss_bbox": 0.08561, "loss_mask": 0.09401, "loss": 0.25031, "time": 0.67586}
{"mode": "train", "epoch": 6, "iter": 24, "lr": 0.0008, "memory": 3952, "data_time": 0.125, "loss_rpn_cls": 0.01213, "loss_rpn_bbox": 0.01254, "loss_cls": 0.10003, "acc": 96.35417, "loss_bbox": 0.12817, "loss_mask": 0.15445, "loss": 0.40731, "time": 0.74069}
{"mode": "train", "epoch": 6, "iter": 27, "lr": 0.0008, "memory": 3952, "data_time": 0.12201, "loss_rpn_cls": 0.00506, "loss_rpn_bbox": 0.01059, "loss_cls": 0.08225, "acc": 97.33073, "loss_bbox": 0.11547, "loss_mask": 0.11174, "loss": 0.32511, "time": 0.72373}
{"mode": "train", "epoch": 6, "iter": 30, "lr": 0.0008, "memory": 3952, "data_time": 0.11835, "loss_rpn_cls": 0.00856, "loss_rpn_bbox": 0.00573, "loss_cls": 0.03699, "acc": 98.89323, "loss_bbox": 0.05459, "loss_mask": 0.06778, "loss": 0.17364, "time": 0.70079}
{"mode": "val", "epoch": 6, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.728, "bbox_mAP_50": 0.8584, "bbox_mAP_75": 0.83, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6527, "bbox_mAP_l": 0.7873, "bbox_mAP_copypaste": "0.7280 0.8584 0.8300 0.0000 0.6527 0.7873", "segm_mAP": 0.7732, "segm_mAP_50": 0.853, "segm_mAP_75": 0.853, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6541, "segm_mAP_l": 0.8406, "segm_mAP_copypaste": "0.7732 0.8530 0.8530 0.0000 0.6541 0.8406"}
{"mode": "train", "epoch": 7, "iter": 3, "lr": 0.0008, "memory": 3952, "data_time": 2.99249, "loss_rpn_cls": 0.00306, "loss_rpn_bbox": 0.00247, "loss_cls": 0.05863, "acc": 97.52604, "loss_bbox": 0.04449, "loss_mask": 0.0637, "loss": 0.17234, "time": 3.69361}
{"mode": "train", "epoch": 7, "iter": 6, "lr": 0.0008, "memory": 3952, "data_time": 0.14262, "loss_rpn_cls": 0.00406, "loss_rpn_bbox": 0.00917, "loss_cls": 0.0665, "acc": 97.65625, "loss_bbox": 0.0949, "loss_mask": 0.12063, "loss": 0.29526, "time": 0.76628}
{"mode": "train", "epoch": 7, "iter": 9, "lr": 0.0008, "memory": 3952, "data_time": 0.13432, "loss_rpn_cls": 0.0171, "loss_rpn_bbox": 0.02293, "loss_cls": 0.11809, "acc": 95.3125, "loss_bbox": 0.16824, "loss_mask": 0.15486, "loss": 0.48122, "time": 0.76861}
{"mode": "train", "epoch": 7, "iter": 12, "lr": 0.0008, "memory": 3952, "data_time": 0.12599, "loss_rpn_cls": 0.00498, "loss_rpn_bbox": 0.01543, "loss_cls": 0.07548, "acc": 96.84245, "loss_bbox": 0.10603, "loss_mask": 0.11416, "loss": 0.31607, "time": 0.70777}
{"mode": "train", "epoch": 7, "iter": 15, "lr": 0.0008, "memory": 3952, "data_time": 0.11635, "loss_rpn_cls": 0.01119, "loss_rpn_bbox": 0.0051, "loss_cls": 0.06004, "acc": 97.91667, "loss_bbox": 0.0808, "loss_mask": 0.09476, "loss": 0.25189, "time": 0.70578}
{"mode": "train", "epoch": 7, "iter": 18, "lr": 0.0008, "memory": 3952, "data_time": 0.124, "loss_rpn_cls": 0.01339, "loss_rpn_bbox": 0.01406, "loss_cls": 0.07897, "acc": 97.03776, "loss_bbox": 0.11522, "loss_mask": 0.11649, "loss": 0.33813, "time": 0.73138}
{"mode": "train", "epoch": 7, "iter": 21, "lr": 0.0008, "memory": 3952, "data_time": 0.13597, "loss_rpn_cls": 0.00343, "loss_rpn_bbox": 0.00451, "loss_cls": 0.0419, "acc": 98.4375, "loss_bbox": 0.05387, "loss_mask": 0.08585, "loss": 0.18956, "time": 0.74235}
{"mode": "train", "epoch": 7, "iter": 24, "lr": 0.0008, "memory": 3952, "data_time": 0.12101, "loss_rpn_cls": 0.00283, "loss_rpn_bbox": 0.00591, "loss_cls": 0.05083, "acc": 98.24219, "loss_bbox": 0.08321, "loss_mask": 0.06985, "loss": 0.21263, "time": 0.68749}
{"mode": "train", "epoch": 7, "iter": 27, "lr": 0.0008, "memory": 3952, "data_time": 0.12101, "loss_rpn_cls": 0.00872, "loss_rpn_bbox": 0.00306, "loss_cls": 0.04692, "acc": 98.60026, "loss_bbox": 0.05863, "loss_mask": 0.06726, "loss": 0.18459, "time": 0.69362}
{"mode": "train", "epoch": 7, "iter": 30, "lr": 0.0008, "memory": 3952, "data_time": 0.1137, "loss_rpn_cls": 0.00476, "loss_rpn_bbox": 0.0095, "loss_cls": 0.07303, "acc": 97.23307, "loss_bbox": 0.0893, "loss_mask": 0.06485, "loss": 0.24144, "time": 0.70445}
{"mode": "val", "epoch": 7, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.7248, "bbox_mAP_50": 0.8493, "bbox_mAP_75": 0.8169, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.5991, "bbox_mAP_l": 0.7999, "bbox_mAP_copypaste": "0.7248 0.8493 0.8169 0.0000 0.5991 0.7999", "segm_mAP": 0.7708, "segm_mAP_50": 0.8424, "segm_mAP_75": 0.8424, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6363, "segm_mAP_l": 0.8442, "segm_mAP_copypaste": "0.7708 0.8424 0.8424 0.0000 0.6363 0.8442"}
{"mode": "train", "epoch": 8, "iter": 3, "lr": 0.0008, "memory": 3952, "data_time": 3.04993, "loss_rpn_cls": 0.00508, "loss_rpn_bbox": 0.01877, "loss_cls": 0.10632, "acc": 95.93099, "loss_bbox": 0.1486, "loss_mask": 0.10292, "loss": 0.38169, "time": 3.77399}
{"mode": "train", "epoch": 8, "iter": 6, "lr": 0.0008, "memory": 3952, "data_time": 0.11902, "loss_rpn_cls": 0.00149, "loss_rpn_bbox": 0.00818, "loss_cls": 0.06465, "acc": 97.33073, "loss_bbox": 0.0645, "loss_mask": 0.08474, "loss": 0.22356, "time": 0.68916}
{"mode": "train", "epoch": 8, "iter": 9, "lr": 0.0008, "memory": 3952, "data_time": 0.126, "loss_rpn_cls": 0.00826, "loss_rpn_bbox": 0.00818, "loss_cls": 0.08127, "acc": 97.00521, "loss_bbox": 0.1057, "loss_mask": 0.09431, "loss": 0.29772, "time": 0.71608}
{"mode": "train", "epoch": 8, "iter": 12, "lr": 0.0008, "memory": 3952, "data_time": 0.11237, "loss_rpn_cls": 0.00786, "loss_rpn_bbox": 0.00818, "loss_cls": 0.0746, "acc": 96.875, "loss_bbox": 0.08507, "loss_mask": 0.10308, "loss": 0.27879, "time": 0.72971}
{"mode": "train", "epoch": 8, "iter": 15, "lr": 0.0008, "memory": 3952, "data_time": 0.12367, "loss_rpn_cls": 0.00508, "loss_rpn_bbox": 0.00439, "loss_cls": 0.05251, "acc": 98.20964, "loss_bbox": 0.08923, "loss_mask": 0.07092, "loss": 0.22212, "time": 0.7347}
{"mode": "train", "epoch": 8, "iter": 18, "lr": 0.0008, "memory": 3952, "data_time": 0.1107, "loss_rpn_cls": 0.00433, "loss_rpn_bbox": 0.00905, "loss_cls": 0.07019, "acc": 97.03776, "loss_bbox": 0.06885, "loss_mask": 0.0628, "loss": 0.21522, "time": 0.69481}
{"mode": "train", "epoch": 8, "iter": 21, "lr": 0.0008, "memory": 3952, "data_time": 0.13098, "loss_rpn_cls": 0.00248, "loss_rpn_bbox": 0.00317, "loss_cls": 0.03244, "acc": 98.89323, "loss_bbox": 0.05108, "loss_mask": 0.08119, "loss": 0.17037, "time": 0.70013}
{"mode": "train", "epoch": 8, "iter": 24, "lr": 0.0008, "memory": 3952, "data_time": 0.12965, "loss_rpn_cls": 0.01225, "loss_rpn_bbox": 0.01374, "loss_cls": 0.0745, "acc": 97.46094, "loss_bbox": 0.08686, "loss_mask": 0.10524, "loss": 0.29259, "time": 0.71642}
{"mode": "train", "epoch": 8, "iter": 27, "lr": 0.0008, "memory": 3952, "data_time": 0.12367, "loss_rpn_cls": 0.02275, "loss_rpn_bbox": 0.0072, "loss_cls": 0.05535, "acc": 98.27474, "loss_bbox": 0.05409, "loss_mask": 0.07051, "loss": 0.20989, "time": 0.6865}
{"mode": "train", "epoch": 8, "iter": 30, "lr": 0.0008, "memory": 3952, "data_time": 0.12533, "loss_rpn_cls": 0.00403, "loss_rpn_bbox": 0.00885, "loss_cls": 0.05305, "acc": 97.6888, "loss_bbox": 0.06634, "loss_mask": 0.09624, "loss": 0.22851, "time": 0.68417}
{"mode": "val", "epoch": 8, "iter": 13, "lr": 0.0008, "bbox_mAP": 0.7359, "bbox_mAP_50": 0.864, "bbox_mAP_75": 0.833, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6684, "bbox_mAP_l": 0.7953, "bbox_mAP_copypaste": "0.7359 0.8640 0.8330 0.0000 0.6684 0.7953", "segm_mAP": 0.7769, "segm_mAP_50": 0.8569, "segm_mAP_75": 0.8569, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6673, "segm_mAP_l": 0.8424, "segm_mAP_copypaste": "0.7769 0.8569 0.8569 0.0000 0.6673 0.8424"}
{"mode": "train", "epoch": 9, "iter": 3, "lr": 8e-05, "memory": 3952, "data_time": 2.922, "loss_rpn_cls": 0.00164, "loss_rpn_bbox": 0.0023, "loss_cls": 0.0496, "acc": 98.04688, "loss_bbox": 0.05611, "loss_mask": 0.09684, "loss": 0.20649, "time": 3.61249}
{"mode": "train", "epoch": 9, "iter": 6, "lr": 8e-05, "memory": 3952, "data_time": 0.12433, "loss_rpn_cls": 0.00218, "loss_rpn_bbox": 0.00237, "loss_cls": 0.03109, "acc": 98.82812, "loss_bbox": 0.02904, "loss_mask": 0.05524, "loss": 0.11991, "time": 0.73199}
{"mode": "train", "epoch": 9, "iter": 9, "lr": 8e-05, "memory": 3952, "data_time": 0.14561, "loss_rpn_cls": 0.00719, "loss_rpn_bbox": 0.00642, "loss_cls": 0.06656, "acc": 97.39583, "loss_bbox": 0.10154, "loss_mask": 0.07764, "loss": 0.25935, "time": 0.80119}
{"mode": "train", "epoch": 9, "iter": 12, "lr": 8e-05, "memory": 3952, "data_time": 0.11769, "loss_rpn_cls": 0.00238, "loss_rpn_bbox": 0.00617, "loss_cls": 0.04791, "acc": 98.20964, "loss_bbox": 0.05273, "loss_mask": 0.06571, "loss": 0.17491, "time": 0.74401}
{"mode": "train", "epoch": 9, "iter": 15, "lr": 8e-05, "memory": 3952, "data_time": 0.11902, "loss_rpn_cls": 0.00673, "loss_rpn_bbox": 0.01274, "loss_cls": 0.0677, "acc": 97.81901, "loss_bbox": 0.07828, "loss_mask": 0.08667, "loss": 0.25212, "time": 0.71542}
{"mode": "train", "epoch": 9, "iter": 18, "lr": 8e-05, "memory": 3952, "data_time": 0.12766, "loss_rpn_cls": 0.0027, "loss_rpn_bbox": 0.01344, "loss_cls": 0.09644, "acc": 95.57292, "loss_bbox": 0.13525, "loss_mask": 0.1293, "loss": 0.37713, "time": 0.72007}
{"mode": "train", "epoch": 9, "iter": 21, "lr": 8e-05, "memory": 3952, "data_time": 0.12367, "loss_rpn_cls": 0.00573, "loss_rpn_bbox": 0.00695, "loss_cls": 0.06084, "acc": 98.14453, "loss_bbox": 0.08393, "loss_mask": 0.10033, "loss": 0.25778, "time": 0.75232}
{"mode": "train", "epoch": 9, "iter": 24, "lr": 8e-05, "memory": 3952, "data_time": 0.14295, "loss_rpn_cls": 0.00677, "loss_rpn_bbox": 0.00904, "loss_cls": 0.06495, "acc": 97.42839, "loss_bbox": 0.07617, "loss_mask": 0.0784, "loss": 0.23534, "time": 0.75199}
{"mode": "train", "epoch": 9, "iter": 27, "lr": 8e-05, "memory": 3952, "data_time": 0.12932, "loss_rpn_cls": 0.00807, "loss_rpn_bbox": 0.01906, "loss_cls": 0.11455, "acc": 95.50781, "loss_bbox": 0.13796, "loss_mask": 0.09851, "loss": 0.37815, "time": 0.73038}
{"mode": "train", "epoch": 9, "iter": 30, "lr": 8e-05, "memory": 3952, "data_time": 0.11137, "loss_rpn_cls": 0.00458, "loss_rpn_bbox": 0.00865, "loss_cls": 0.05579, "acc": 98.07943, "loss_bbox": 0.06333, "loss_mask": 0.08003, "loss": 0.21239, "time": 0.83443}
{"mode": "val", "epoch": 9, "iter": 13, "lr": 8e-05, "bbox_mAP": 0.7374, "bbox_mAP_50": 0.8661, "bbox_mAP_75": 0.8381, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6877, "bbox_mAP_l": 0.793, "bbox_mAP_copypaste": "0.7374 0.8661 0.8381 0.0000 0.6877 0.7930", "segm_mAP": 0.7835, "segm_mAP_50": 0.8621, "segm_mAP_75": 0.8621, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6761, "segm_mAP_l": 0.846, "segm_mAP_copypaste": "0.7835 0.8621 0.8621 0.0000 0.6761 0.8460"}
{"mode": "train", "epoch": 10, "iter": 3, "lr": 8e-05, "memory": 3952, "data_time": 2.94518, "loss_rpn_cls": 0.00829, "loss_rpn_bbox": 0.00697, "loss_cls": 0.05741, "acc": 97.75391, "loss_bbox": 0.05132, "loss_mask": 0.06624, "loss": 0.19023, "time": 3.7131}
{"mode": "train", "epoch": 10, "iter": 6, "lr": 8e-05, "memory": 3952, "data_time": 0.14894, "loss_rpn_cls": 0.00515, "loss_rpn_bbox": 0.01238, "loss_cls": 0.04938, "acc": 98.24219, "loss_bbox": 0.05833, "loss_mask": 0.06298, "loss": 0.18822, "time": 0.82546}
{"mode": "train", "epoch": 10, "iter": 9, "lr": 8e-05, "memory": 3952, "data_time": 0.13797, "loss_rpn_cls": 0.00457, "loss_rpn_bbox": 0.01306, "loss_cls": 0.0916, "acc": 96.51693, "loss_bbox": 0.10163, "loss_mask": 0.08826, "loss": 0.29911, "time": 0.90059}
{"mode": "train", "epoch": 10, "iter": 12, "lr": 8e-05, "memory": 3952, "data_time": 0.12423, "loss_rpn_cls": 0.00215, "loss_rpn_bbox": 0.00388, "loss_cls": 0.04394, "acc": 98.33984, "loss_bbox": 0.06904, "loss_mask": 0.06701, "loss": 0.18602, "time": 0.80839}
{"mode": "train", "epoch": 10, "iter": 15, "lr": 8e-05, "memory": 3952, "data_time": 0.21859, "loss_rpn_cls": 0.00415, "loss_rpn_bbox": 0.00638, "loss_cls": 0.04697, "acc": 98.40495, "loss_bbox": 0.05376, "loss_mask": 0.0658, "loss": 0.17707, "time": 0.93999}
{"mode": "train", "epoch": 10, "iter": 18, "lr": 8e-05, "memory": 3952, "data_time": 0.15226, "loss_rpn_cls": 0.00443, "loss_rpn_bbox": 0.00898, "loss_cls": 0.08141, "acc": 97.29818, "loss_bbox": 0.10799, "loss_mask": 0.09707, "loss": 0.29988, "time": 0.75432}
{"mode": "train", "epoch": 10, "iter": 21, "lr": 8e-05, "memory": 3952, "data_time": 0.12168, "loss_rpn_cls": 0.00346, "loss_rpn_bbox": 0.00887, "loss_cls": 0.07024, "acc": 97.55859, "loss_bbox": 0.10309, "loss_mask": 0.12566, "loss": 0.31132, "time": 0.7091}
{"mode": "train", "epoch": 10, "iter": 24, "lr": 8e-05, "memory": 3952, "data_time": 0.11636, "loss_rpn_cls": 0.00272, "loss_rpn_bbox": 0.01128, "loss_cls": 0.07139, "acc": 97.00521, "loss_bbox": 0.09888, "loss_mask": 0.13423, "loss": 0.31851, "time": 0.70301}
{"mode": "train", "epoch": 10, "iter": 27, "lr": 8e-05, "memory": 3952, "data_time": 0.12284, "loss_rpn_cls": 0.00378, "loss_rpn_bbox": 0.0039, "loss_cls": 0.05979, "acc": 97.98177, "loss_bbox": 0.07215, "loss_mask": 0.07202, "loss": 0.21165, "time": 0.71839}
{"mode": "train", "epoch": 10, "iter": 30, "lr": 8e-05, "memory": 3952, "data_time": 0.12284, "loss_rpn_cls": 0.0076, "loss_rpn_bbox": 0.00828, "loss_cls": 0.06001, "acc": 97.36328, "loss_bbox": 0.06461, "loss_mask": 0.07382, "loss": 0.21432, "time": 0.69879}
{"mode": "val", "epoch": 10, "iter": 13, "lr": 8e-05, "bbox_mAP": 0.7397, "bbox_mAP_50": 0.8614, "bbox_mAP_75": 0.8309, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6752, "bbox_mAP_l": 0.8014, "bbox_mAP_copypaste": "0.7397 0.8614 0.8309 0.0000 0.6752 0.8014", "segm_mAP": 0.7785, "segm_mAP_50": 0.8545, "segm_mAP_75": 0.8545, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6666, "segm_mAP_l": 0.8459, "segm_mAP_copypaste": "0.7785 0.8545 0.8545 0.0000 0.6666 0.8459"}
{"mode": "train", "epoch": 11, "iter": 3, "lr": 8e-05, "memory": 3952, "data_time": 2.99132, "loss_rpn_cls": 0.00593, "loss_rpn_bbox": 0.00923, "loss_cls": 0.0742, "acc": 97.13542, "loss_bbox": 0.10863, "loss_mask": 0.11364, "loss": 0.31163, "time": 3.65738}
{"mode": "train", "epoch": 11, "iter": 6, "lr": 8e-05, "memory": 3952, "data_time": 0.11868, "loss_rpn_cls": 0.00545, "loss_rpn_bbox": 0.00873, "loss_cls": 0.0469, "acc": 98.27474, "loss_bbox": 0.05671, "loss_mask": 0.09595, "loss": 0.21374, "time": 0.66289}
{"mode": "train", "epoch": 11, "iter": 9, "lr": 8e-05, "memory": 3952, "data_time": 0.11868, "loss_rpn_cls": 0.00233, "loss_rpn_bbox": 0.00617, "loss_cls": 0.03289, "acc": 98.89323, "loss_bbox": 0.0474, "loss_mask": 0.05858, "loss": 0.14738, "time": 0.69025}
{"mode": "train", "epoch": 11, "iter": 12, "lr": 8e-05, "memory": 3952, "data_time": 0.13564, "loss_rpn_cls": 0.0022, "loss_rpn_bbox": 0.00975, "loss_cls": 0.07412, "acc": 97.07031, "loss_bbox": 0.09886, "loss_mask": 0.09028, "loss": 0.27521, "time": 0.73737}
{"mode": "train", "epoch": 11, "iter": 15, "lr": 8e-05, "memory": 3952, "data_time": 0.12267, "loss_rpn_cls": 0.00215, "loss_rpn_bbox": 0.00626, "loss_cls": 0.06513, "acc": 97.46094, "loss_bbox": 0.08382, "loss_mask": 0.07411, "loss": 0.23148, "time": 0.71628}
{"mode": "train", "epoch": 11, "iter": 18, "lr": 8e-05, "memory": 3952, "data_time": 0.13298, "loss_rpn_cls": 0.0101, "loss_rpn_bbox": 0.01309, "loss_cls": 0.04826, "acc": 98.56771, "loss_bbox": 0.0551, "loss_mask": 0.07053, "loss": 0.19708, "time": 0.72623}
{"mode": "train", "epoch": 11, "iter": 21, "lr": 8e-05, "memory": 3952, "data_time": 0.1268, "loss_rpn_cls": 0.00327, "loss_rpn_bbox": 0.00375, "loss_cls": 0.03795, "acc": 98.56771, "loss_bbox": 0.0445, "loss_mask": 0.05235, "loss": 0.14183, "time": 0.72225}
{"mode": "train", "epoch": 11, "iter": 24, "lr": 8e-05, "memory": 3952, "data_time": 0.12852, "loss_rpn_cls": 0.00657, "loss_rpn_bbox": 0.00848, "loss_cls": 0.07722, "acc": 96.71224, "loss_bbox": 0.08619, "loss_mask": 0.08263, "loss": 0.26111, "time": 0.74949}
{"mode": "train", "epoch": 11, "iter": 27, "lr": 8e-05, "memory": 3952, "data_time": 0.12201, "loss_rpn_cls": 0.00474, "loss_rpn_bbox": 0.01293, "loss_cls": 0.08449, "acc": 96.64714, "loss_bbox": 0.0927, "loss_mask": 0.11378, "loss": 0.30864, "time": 0.73836}
{"mode": "train", "epoch": 11, "iter": 30, "lr": 8e-05, "memory": 3952, "data_time": 0.12832, "loss_rpn_cls": 0.00457, "loss_rpn_bbox": 0.01168, "loss_cls": 0.07564, "acc": 97.00521, "loss_bbox": 0.10354, "loss_mask": 0.12119, "loss": 0.31662, "time": 0.75398}
{"mode": "val", "epoch": 11, "iter": 13, "lr": 8e-05, "bbox_mAP": 0.7359, "bbox_mAP_50": 0.8627, "bbox_mAP_75": 0.8318, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6809, "bbox_mAP_l": 0.7938, "bbox_mAP_copypaste": "0.7359 0.8627 0.8318 0.0000 0.6809 0.7938", "segm_mAP": 0.7766, "segm_mAP_50": 0.8556, "segm_mAP_75": 0.8556, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6661, "segm_mAP_l": 0.8428, "segm_mAP_copypaste": "0.7766 0.8556 0.8556 0.0000 0.6661 0.8428"}
{"mode": "train", "epoch": 12, "iter": 3, "lr": 1e-05, "memory": 3952, "data_time": 3.02498, "loss_rpn_cls": 0.00192, "loss_rpn_bbox": 0.00466, "loss_cls": 0.04909, "acc": 98.30729, "loss_bbox": 0.06695, "loss_mask": 0.06054, "loss": 0.18317, "time": 3.72976}
{"mode": "train", "epoch": 12, "iter": 6, "lr": 1e-05, "memory": 3952, "data_time": 0.125, "loss_rpn_cls": 0.00986, "loss_rpn_bbox": 0.01337, "loss_cls": 0.07624, "acc": 97.16797, "loss_bbox": 0.08922, "loss_mask": 0.08866, "loss": 0.27735, "time": 0.70179}
{"mode": "train", "epoch": 12, "iter": 9, "lr": 1e-05, "memory": 3952, "data_time": 0.12666, "loss_rpn_cls": 0.01377, "loss_rpn_bbox": 0.00954, "loss_cls": 0.07112, "acc": 97.52604, "loss_bbox": 0.08921, "loss_mask": 0.10085, "loss": 0.2845, "time": 0.71475}
{"mode": "train", "epoch": 12, "iter": 12, "lr": 1e-05, "memory": 3952, "data_time": 0.1107, "loss_rpn_cls": 0.00571, "loss_rpn_bbox": 0.00523, "loss_cls": 0.03454, "acc": 98.95833, "loss_bbox": 0.03791, "loss_mask": 0.06953, "loss": 0.15292, "time": 0.66555}
{"mode": "train", "epoch": 12, "iter": 15, "lr": 1e-05, "memory": 3952, "data_time": 0.12367, "loss_rpn_cls": 0.00228, "loss_rpn_bbox": 0.00697, "loss_cls": 0.05582, "acc": 98.07943, "loss_bbox": 0.08749, "loss_mask": 0.09177, "loss": 0.24433, "time": 0.72506}
{"mode": "train", "epoch": 12, "iter": 18, "lr": 1e-05, "memory": 3952, "data_time": 0.11104, "loss_rpn_cls": 0.00935, "loss_rpn_bbox": 0.0063, "loss_cls": 0.05185, "acc": 98.30729, "loss_bbox": 0.05904, "loss_mask": 0.07823, "loss": 0.20477, "time": 0.68583}
{"mode": "train", "epoch": 12, "iter": 21, "lr": 1e-05, "memory": 3952, "data_time": 0.123, "loss_rpn_cls": 0.00363, "loss_rpn_bbox": 0.00843, "loss_cls": 0.06649, "acc": 97.20052, "loss_bbox": 0.07918, "loss_mask": 0.09052, "loss": 0.24825, "time": 0.74069}
{"mode": "train", "epoch": 12, "iter": 24, "lr": 1e-05, "memory": 3952, "data_time": 0.12035, "loss_rpn_cls": 0.00614, "loss_rpn_bbox": 0.00765, "loss_cls": 0.06757, "acc": 97.16797, "loss_bbox": 0.07317, "loss_mask": 0.06702, "loss": 0.22155, "time": 0.7111}
{"mode": "train", "epoch": 12, "iter": 27, "lr": 1e-05, "memory": 3952, "data_time": 0.11968, "loss_rpn_cls": 0.01127, "loss_rpn_bbox": 0.01598, "loss_cls": 0.07507, "acc": 96.90755, "loss_bbox": 0.09887, "loss_mask": 0.105, "loss": 0.30619, "time": 0.71941}
{"mode": "train", "epoch": 12, "iter": 30, "lr": 1e-05, "memory": 3952, "data_time": 0.12433, "loss_rpn_cls": 0.00838, "loss_rpn_bbox": 0.00836, "loss_cls": 0.07005, "acc": 97.81901, "loss_bbox": 0.0832, "loss_mask": 0.0983, "loss": 0.26828, "time": 0.72207}
{"mode": "val", "epoch": 12, "iter": 13, "lr": 1e-05, "bbox_mAP": 0.7353, "bbox_mAP_50": 0.8623, "bbox_mAP_75": 0.8313, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.6748, "bbox_mAP_l": 0.7956, "bbox_mAP_copypaste": "0.7353 0.8623 0.8313 0.0000 0.6748 0.7956", "segm_mAP": 0.7763, "segm_mAP_50": 0.8553, "segm_mAP_75": 0.8553, "segm_mAP_s": 0.0, "segm_mAP_m": 0.6661, "segm_mAP_l": 0.8428, "segm_mAP_copypaste": "0.7763 0.8553 0.8553 0.0000 0.6661 0.8428"}
